
@import url('./reset.css');

body, html {
    height: 100%;
}

/* Overriding a specific component instance's styles */
/* Overrides the modal component default styling on the close button */
.colored::part(modal-close):hover {
    background: red;
}

/* Overrides the custom properties defined on the modal component */
.colored {
    --backdrop: #00009966;
    --background: #cceeee;
}

.colored::part(modal-footer) {
    color: white;
    background: firebrick;
}

/* Styling slotted components */
.modal-title {
    width: 100%;
    text-align: center;
}

body,
.controls,
.modal-content,
#cube-wrapper,
css3d-cuboid > div {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.controls {
    gap: 0.25em;
}

.controls > button {
    width: 100%;
    padding: 0.25em;
}

#test-counter {
    width: 100px;
}

#cube-wrapper {
    --size: 15em;
    width: var(--size);
    height: var(--size);
    perspective: 100vw;
    background: url('../images/icon.svg') 0 0 / contain no-repeat;
}

css3d-cuboid {
    --width: calc(var(--size) / 2);
    --height: calc(var(--size) / 2);
    --depth: calc(var(--size) / 2);
    animation: rotate 10s linear infinite;
}

@keyframes rotate {
    from { transform: rotate3d(0); }
    to { transform: rotate3d(1,1,0, 360deg);}
}

css3d-cuboid > div {
    background-color: #aaaaaaaa;
    border: 1px solid #aaa;
    width: 100%;
    height: 100%;
}

.colored css3d-cuboid > div {
    background-color: #aa0000aa;
    border: 1px solid #aa0000;
}

/* .enso {
    background: #aaaaaaaa url('../images/icon.svg') 0 0 / contain no-repeat;
}

.colored .enso {
    background: #aa0000aa url('../images/icon.svg') 0 0 / contain no-repeat;
} */